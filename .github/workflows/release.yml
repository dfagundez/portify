name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-menubar.txt
        pip install -e .
    
    - name: Create app icon
      run: python scripts/create_app_icon.py
    
    - name: Build macOS app
      run: python scripts/create_macos_app.py
    
    - name: Verify build artifacts
      run: |
        ls -la dist/
        if [ ! -f "dist/Portify.dmg" ]; then
          echo "❌ Portify.dmg not found!"
          exit 1
        fi
        echo "✅ Build artifacts verified"
    
    - name: Upload DMG artifact
      uses: actions/upload-artifact@v4
      with:
        name: Portify-macOS
        path: dist/Portify.dmg
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: dist/Portify.dmg
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
    
    - name: Test CLI
      run: |
        portify --help
        portify version
        portify list --help
